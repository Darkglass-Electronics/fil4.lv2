// generated by lv2ttl2c from
// http://gareus.org/oss/lv2/fil4#stereo

extern const LV2_Descriptor* lv2_descriptor(uint32_t index);
extern const LV2UI_Descriptor* lv2ui_descriptor(uint32_t index);

static const RtkLv2Description _plugin_stereo = {
	&lv2_descriptor,
	&lv2ui_descriptor
	, 1 // uint32_t dsp_descriptor_id
	, 0 // uint32_t gui_descriptor_id
	, "4 Band Parametric EQ Stereo" // const char *plugin_human_id
	, (const struct LV2Port[38])
	{
		{ "control", ATOM_IN, nan},
		{ "notify", ATOM_OUT, nan},
		{ "filter", CONTROL_IN, 0.000000},
		{ "gain", CONTROL_IN, 0.000000},
		{ "HighPass", CONTROL_IN, 0.000000},
		{ "HPfreq", CONTROL_IN, 20.000000},
		{ "HPQ", CONTROL_IN, 0.410000},
		{ "LowPass", CONTROL_IN, 0.000000},
		{ "LPfreq", CONTROL_IN, 18000.000000},
		{ "LPQ", CONTROL_IN, 0.500000},
		{ "LSsec", CONTROL_IN, 1.000000},
		{ "LSfreq", CONTROL_IN, 80.000000},
		{ "LSq", CONTROL_IN, 1.000000},
		{ "LSgain", CONTROL_IN, 0.000000},
		{ "sec1", CONTROL_IN, 1.000000},
		{ "freq1", CONTROL_IN, 160.000000},
		{ "q1", CONTROL_IN, 0.600000},
		{ "gain1", CONTROL_IN, 0.000000},
		{ "sec2", CONTROL_IN, 1.000000},
		{ "freq2", CONTROL_IN, 397.000000},
		{ "q2", CONTROL_IN, 0.600000},
		{ "gain2", CONTROL_IN, 0.000000},
		{ "sec3", CONTROL_IN, 1.000000},
		{ "freq3", CONTROL_IN, 1250.000000},
		{ "q3", CONTROL_IN, 0.600000},
		{ "gain3", CONTROL_IN, 0.000000},
		{ "sec4", CONTROL_IN, 1.000000},
		{ "freq4", CONTROL_IN, 2500.000000},
		{ "q4", CONTROL_IN, 0.600000},
		{ "gain4", CONTROL_IN, 0.000000},
		{ "HSsec", CONTROL_IN, 1.000000},
		{ "HSfreq", CONTROL_IN, 8000.000000},
		{ "HSq", CONTROL_IN, 1.000000},
		{ "HSgain", CONTROL_IN, 0.000000},
		{ "inL", AUDIO_IN, nan},
		{ "outL", AUDIO_OUT, nan},
		{ "inR", AUDIO_IN, nan},
		{ "outR", AUDIO_OUT, nan},
	}
	, 38 // uint32_t nports_total
	, 2 // uint32_t nports_audio_in
	, 2 // uint32_t nports_audio_out
	, 0 // uint32_t nports_midi_in
	, 0 // uint32_t nports_midi_out
	, 1 // uint32_t nports_atom_in
	, 1 // uint32_t nports_atom_out
	, 32 // uint32_t nports_ctrl
	, 32 // uint32_t nports_ctrl_in
	, 0 // uint32_t nports_ctrl_out
	, 65888 // uint32_t min_atom_bufsiz
	, false // bool send_time_info
};
